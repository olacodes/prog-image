name: Image Storage Service CI/CD.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-and-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Filter for storage service
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            storage_service:
              - 'storage_service/*'

      - name: Startup Common Services
        if: steps.filter.outputs.storage_service == 'true'
        run: docker-compose -f common.test.yml up -d

      - name: Startup Storage Services
        if: steps.filter.outputs.storage_service == 'true'
        run: docker-compose -f docker-compose.test.yml up -d
        env:
          REDIS_URL: ${{ secrets.REDIS_URL }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
          CELERY_FLOWER_USER: ${{ secrets.CELERY_FLOWER_USER }}
          CELERY_FLOWER_PASSWORD: ${{ secrets.CELERY_FLOWER_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          TMP_FILES: ${{ secrets.TMP_FILES }}
          TMP_IMG: ${{ secrets.TMP_IMG }}

      - name: Show Common Services Logs
        if: steps.filter.outputs.storage_service == 'true'
        run: docker-compose -f common.test.yml logs

      - name: Show Storage Services Logs
        if: steps.filter.outputs.storage_service == 'true'
        run: docker-compose -f docker-compose.test.yml logs

      - name: Run Tests and Linting Checks
        if: steps.filter.outputs.storage_service == 'true'
        run: docker-compose exec -T storage_service pytest
